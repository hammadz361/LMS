@page "/Tehsil/Create"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using LMS.Shared.Models
@attribute [Authorize]
@inject HttpClient HttpModule
@inject NavigationManager Navigate
@inject IToastService toastService

<div class="container">
    <div class="row">
        @if(this.errorMessage != null){
            <div class="alert alert-danger my-5" role="alert">
                @errorMessage <a @onclick="errormsg" class="alert-link">Go to home page</a>. Click on link.
            </div>
        }
    </div>
    <EditForm Model="@tehsils" OnValidSubmit="@OnSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="row justify-content-center align-items-center">
             <div class="card col-sm-6 px-0">
                <h4 class="card-header text-center">Create Tehsil</h4>
             <div class="card-body ">
                <div class="row">
                    <div class="col-md">
                        <InputText class="form-control" id="name" @bind-Value="tehsils.Name" /><br />
                        <ValidationMessage For="@(() => tehsils.Name)" />
                    </div>
                 </div>
                <div class="row">
                    <div class="col-md">
                        <select class="form-control" @onchange="@districtClicked">
                            <option value="">-- Select District --</option>
                            @foreach (var item in districts)
                            {
                                <option value="@item.DistrictId">
                                    @item.Name
                                </option>
                            }
                        </select>
                    </div>
                </div><br />
                <button type="submit" class="btn btn-success">Submit</button>
            </div>
            </div>
        </div>
    </EditForm>
</div>

@code {
    private Tehsil tehsils = new();
    private IList<District>? districts = new List<District>();
    private string? errorMessage;

    protected override async Task OnInitializedAsync(){
    try
        {
            try
            {
                districts = await HttpModule.GetFromJsonAsync<IList<District>>("api/Districts");
            }
            catch (Exception)
            {
                toastService.ShowError("Dont Have access only admin can access this page", "Error");
                errorMessage = "Dont Have access only admin can access this page";
            }
        }
        catch(AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }
    public async Task OnSubmit()
    {
        try
        {
            await HttpModule.PostAsJsonAsync("api/Tehsils", tehsils);
            toastService.ShowSuccess("Added Successfully!..", nameof(Tehsil));
            Navigate.NavigateTo("Tehsil/View");
        }
        catch(Exception ex)
        {
            toastService.ShowError("Error Occured on server response", "Error");
        }

    }
    public void districtClicked(ChangeEventArgs Event)
    {        
        tehsils.DistrictId = int.Parse(Event.Value.ToString());
        this.StateHasChanged();
    }
    public void errormsg()
    {
        Navigate.NavigateTo("Tehsil/View");
    }
}
