@page "/Topic/Create"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using LMS.Shared.Models
@attribute [Authorize]
@inject HttpClient HttpModule
@inject NavigationManager Navigate
@inject IToastService toastService

<div class="container">
    <div class="row">
        @if(this.errorMessage != null){
            <div class="alert alert-danger my-5" role="alert">
                @errorMessage <a @onclick="errormsg" class="alert-link">Go to home page</a>. Click on link.
            </div>
        }
    </div>
    <EditForm Model="@Topic" OnValidSubmit="@OnSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="row justify-content-center align-items-center">
        <div class="card col-sm-6 px-0">
            <h4 class="card-header text-center">Create Topic</h4>
                <div class="card-body">
                    <div class="row">
                        <div class=col-md>
                            <label for="name" class="form-text">Name</label>
                            <InputText class="form-control" id="name" @bind-Value="Topic.Name" /><br />
                            <ValidationMessage For="@(() => Topic.Name)" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md">
                            <select class="form-control" @onchange="@TopicClicked">
                                <option value="">-- Select Video --</option>
                                @if (videos != null)
                                {
                                    @foreach (var vid in videos)
                                    {
                                        <option value="@vid.VideoId">@vid.Name</option>
                                    }
                                }
                            </select>
                        </div> 
                    </div><br />
                    <button type="submit" class="btn btn-success">Submit</button>
                </div>
            </div>
        </div>
    </EditForm>
</div>


@code {
    private Topic Topic = new();
    private IList<Video>? videos = new List<Video>();
    private string? errorMessage;
    protected override async Task OnInitializedAsync()
    {
        try
        {
            try
            {
                videos = await HttpModule.GetFromJsonAsync<IList<Video>>($"api/Videos");
            }
            catch (Exception)
            {
                toastService.ShowError("Dont Have access only admin can access this page", "Error");
                errorMessage = "Dont Have access only admin can access this page";
            }
        }
        catch(AccessTokenNotAvailableException e)
        {
            e.Redirect();
            toastService.ShowInfo("Login is Nessecary..", "Login");
        }
    }
    public async Task OnSubmit()
    {
        try
        {
            await HttpModule.PostAsJsonAsync("api/Topics", Topic);
            toastService.ShowSuccess("Added Successfully!..", nameof(Topic));
            Navigate.NavigateTo("Topic/View");
        }
        catch(Exception)
        {
            toastService.ShowError("Error Occured on server response", "Error");
            errorMessage = "Error Occured on server response";
        }

    }
    public void TopicClicked(ChangeEventArgs Event)
    {        
        Topic.VideoId = int.Parse(Event.Value.ToString());
        this.StateHasChanged();
    }
    public void errormsg()
    {
        Navigate.NavigateTo("Topic/View");
    }
}
