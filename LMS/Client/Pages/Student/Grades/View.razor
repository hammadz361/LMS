@page "/Student/Grades/View"
@using LMS.Shared.Models;
@inject NavigationManager Navigate
@inject HttpClient HttpModule
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject IToastService toastService

<style>
   
    .container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100%;
        max-width: 100%;
    }

    .btn1 {
        width: 180px;
        height: 100px;
        background-color: #fafafa;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-left: 2rem;
        margin-right: 2rem;
        cursor: pointer;
        transition: all 0.3s;
        border-radius: 10px;
    }

        .btn1.fb-btn1 {
            box-shadow: 0 20px 20px -17px rgba(0,111,255,0.53);
        }

            .btn1.fb-btn1:hover {
                transform: scale(1.2);
                box-shadow: 0 30px 45px -15px rgba(0,111,255,0.65);
            }

        .btn1.ig-btn1 {
            box-shadow: 0 20px 20px -17px rgba(255,16,39,0.5);
        }

            .btn1.ig-btn1:hover {
                transform: scale(1.2);
                box-shadow: 0 30px 45px -15px rgba(255,16,39,0.57);
            }

        .btn1.tw-btn1 {
            box-shadow: 0 20px 20px -17px rgba(0,255,255,0.53);
        }

            .btn1.tw-btn1:hover {
                transform: scale(1.2);
                box-shadow: 0 30px 45px -15px rgba(0,255,255,0.57);
            }

    span.circle {
        border-radius: 50%;
        -moz-border-radius: 50%;
        -webkit-border-radius: 50%;
        color: black;
        display: inline-block;
        font-size:23px;
        line-height: 80px;
        text-align: center;
        width: 80px;
    }
</style>

<h1>List of Grades</h1>
@if(this.errorMessage != null){
    <div class="alert alert-danger my-5" role="alert">
      @errorMessage
    </div>
}
else
{
    var counter = 0;
    <div class="container">
        <div class="row">
            @foreach (var Grade in grades)
            {
                if (counter == 3)
                    counter = 0;
                <div class="col-xl-3 col-sm-6 col-12 mt-4" @onclick="( () => ViewSubject(Grade.GradeId))">
                    <div class="@ClassCode[counter]" style="color:gray">
                        <span class="circle" style="background:@ColorCode[counter]">@Grade.Code <sub style="left:-5px">th</sub></span>
                    </div>
                </div>
                counter++;
            }
        </div>
    </div>
}

@code {
    private IList<Grade>? grades = new List<Grade>();
    public List<string> ClassCode = new List<string>() { "btn1 fb-btn1", "btn1 tw-btn1", "btn1 ig-btn1", "btn1 fb-btn1" };
    public List<string> ColorCode = new List<string>() { "rgba(0,111,255,0.6)", "rgba(0,255,255,0.8)", "rgba(255,16,39,0.57)", "rgba(0,111,255,0.65)" };
    private string? errorMessage;
    protected override async Task OnInitializedAsync()
    {
        try
        {
            try
            {
                grades = await HttpModule.GetFromJsonAsync<List<Grade>>("api/Grades");
            }
            catch (Exception)
            {
                toastService.ShowError("Dont Have access only admin can access this page", "Error");
                errorMessage = "Dont Have access only admin can access this page";
            }
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();

        }
    }

    public void ViewSubject(int Gradeid)
    {
        Navigate.NavigateTo($"Student/Subjects/View/{Gradeid}");
    }
}
