@page "/Student/Subjects/View/{Gradeid:int}"
@using LMS.Shared.Models;
@inject NavigationManager Navigate
@inject HttpClient HttpModule
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

<h1>List of Subjects</h1>

@if (subjects == null)
{
<div class="spinner"></div>
}
else
{
    var counter = 0;
    <div class="container">
        <div class="row my-3">
            <nav style="--bs-breadcrumb-divider: url(&#34;data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8'%3E%3Cpath d='M2.5 0L1 1.5 3.5 4 1 6.5 2.5 8l4-4-4-4z' fill='currentColor'/%3E%3C/svg%3E&#34;);" aria-label="breadcrumb">
              <ol class="breadcrumb">
                <li class="breadcrumb-item text-primary" style="cursor: pointer;" @onclick="GoBack">Grade</li>
                <li class="breadcrumb-item active" aria-current="page">Subject</li>
              </ol>
            </nav>
        </div>
        <div class="row">
            @foreach (var subject in subjects.Where(a => a.GradeId == Gradeid))
            {
                <div class="col-xl-3 col-sm-6 col-12 mt-4 text-center" @onclick="( () => ViewSubject(subject.SubjectId))">
                    <img src="@subject.ImagePath" width="@WidthCode[counter]" height="@HeightCode[counter]" style="cursor:pointer" />
                </div>
                counter++;
            }
        </div>
        @{
            if (subjects.Count() == 0)
            {
                <h3>Coming soon...</h3>
            }
        }
    </div>
}

@code {
    [Parameter] public int Gradeid { get; set; }
    private IList<Subject>? subjects = new List<Subject>();
    public List<string> WidthCode = new List<string>() { "130", "170", "115", "155", "110" };
    public List<string> HeightCode = new List<string>() { "130", "130", "130", "130", "130" };

    protected override async Task OnInitializedAsync()
    {
        try
        {
            subjects = await HttpModule.GetFromJsonAsync<List<Subject>>("api/Subjects/GetSubjects");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }

    public void ViewSubject(int Subid)
    {
        Navigate.NavigateTo($"Student/Chapters/View/{Subid}/{this.Gradeid}");
    }
    public void GoBack(){
        Navigate.NavigateTo("Student/Grades/View");
    }
}
